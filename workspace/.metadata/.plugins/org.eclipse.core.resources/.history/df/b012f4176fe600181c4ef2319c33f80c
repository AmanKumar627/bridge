package com.bridge;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.Scanner;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class ReportMain {
	public static void main(String[] args) throws org.json.simple.parser.ParseException {

		Scanner sc = new Scanner(System.in);
		/*System.out.println("enter the number of stock");
		int stock = sc.nextInt();
		System.out.println("enter the name of stock");
		String name = sc.next();
		System.out.println("enter the no of share");
		int share = sc.nextInt();
*/
		JSONParser parser = new JSONParser();
		try {
			FileReader reader = new FileReader("/home/bridgelabz/aman.json");

			Object obj = parser.parse(reader);
			JSONArray list = (JSONArray) obj;

			System.out.println(list);
			for (int i = 0; i < list.size(); i++) {
	             JSONObject obj1=(JSONObject)list.get(i);
	             System.out.println("");
				
			
			}
		}

		catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private static void parsestockObject(JSONObject stock, JSONObject stock1, JSONObject stock2) {
		JSONObject stockObject = (JSONObject) stock.get("firstStock");
		String stockname = (String) stockObject.get("stockname");
		int noOfShares = (int) stockObject.get("NoOfShare");
		int PriceOfEachShare = (int) stockObject.get("PriceOfEachShare");

		JSONObject stockObject1 = (JSONObject) stock1.get("secondStock");
		String stockname1 = (String) stockObject1.get("stockname");
		int noOfShares1 = (int) stockObject.get("NoOfShare");
		int PriceOfEachShare1 = (int) stockObject.get("PriceOfEachShare");

		JSONObject stockObject2 = (JSONObject) stock2.get("thirdStock");
		String stockname2 = (String) stockObject2.get("stockname");
		int noOfShares2 = (int) stockObject2.get("NoOfShare");
		int PriceOfEachShare2 = (int) stockObject2.get("PriceOfEachShare");
	}

	// TODO Auto-generated method stub
}
